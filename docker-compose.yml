services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["./wait-for-ldap.sh", "ldap", "389", "python", "manage.py", "runserver", "0.0.0.0:8000"]
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - ldap
    networks:
      - app-network

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - app-network

  ldap:
    image: osixia/openldap:1.5.0
    container_name: mainlylabs_ldap
    hostname: ldap.example.com
    environment:
      LDAP_LOG_LEVEL: "256"
      LDAP_ORGANISATION: "Mainly Labs"
      LDAP_DOMAIN: "example.com"
      LDAP_BASE_DN: "dc=example,dc=com"
      LDAP_ADMIN_PASSWORD: "InterNat"
      LDAP_CONFIG_PASSWORD: "InterNat"
      LDAP_READONLY_USER: "false"
      LDAP_RFC2307BIS_SCHEMA: "false"
      LDAP_BACKEND: "mdb"
      LDAP_TLS: "false"
      LDAP_TLS_CRT_FILENAME: "ldap.crt"
      LDAP_TLS_KEY_FILENAME: "ldap.key"
      LDAP_TLS_DH_PARAM_FILENAME: "dhparam.pem"
      LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
      LDAP_TLS_ENFORCE: "false"
      LDAP_TLS_CIPHER_SUITE: "SECURE256:-VERS-SSL3.0"
      LDAP_TLS_PROTOCOL_MIN: "3.1"
      LDAP_TLS_VERIFY_CLIENT: "demand"
      LDAP_REPLICATION: "false"
      KEEP_EXISTING_CONFIG: "false"
      LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
      LDAP_SSL_HELPER_PREFIX: "ldap"
    tty: true
    stdin_open: true
    volumes:
      - ldap_data:/var/lib/ldap
      - ldap_config:/etc/ldap/slapd.d
      - ./init_ldap_data.ldif:/ldap/init_ldap_data.ldif
    ports:
      - "1389:389"
      - "1636:636"
    networks:
      - app-network

  phpldapadmin:
    image: osixia/phpldapadmin:latest
    container_name: mainlylabs_phpldapadmin
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: "ldap"
      PHPLDAPADMIN_HTTPS: "false"
    ports:
      - "8080:80"
    depends_on:
      - ldap
    networks:
      - app-network

volumes:
  postgres_data:
  ldap_data:
  ldap_config:

networks:
  app-network:
    driver: bridge